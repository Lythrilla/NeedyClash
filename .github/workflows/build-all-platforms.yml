# Clash Verge Rev - 多平台自动构建
name: 多平台构建

on:
  push:
    branches: [ main, master, dev ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main, master, dev ]
  workflow_dispatch:

jobs:
  # Windows 构建
  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target:
          - x86_64-pc-windows-msvc
          - i686-pc-windows-msvc
          - aarch64-pc-windows-msvc
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 安装 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: 设置 Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: 安装依赖
        run: pnpm install

      - name: 运行 Prebuild
        run: node scripts/prebuild.mjs ${{ matrix.target }}

      - name: 构建应用
        run: pnpm tauri build --target ${{ matrix.target }}
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: windows-${{ matrix.target }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/
            src-tauri/target/${{ matrix.target }}/release/*.exe
          if-no-files-found: error

  # macOS 构建
  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 安装 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: 设置 Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: 安装依赖
        run: pnpm install

      - name: 运行 Prebuild
        run: node scripts/prebuild.mjs ${{ matrix.target }}

      - name: 构建应用
        run: pnpm tauri build --target ${{ matrix.target }}
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.target }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/
          if-no-files-found: error

  # Linux 构建
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 安装 pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 9

      - name: 设置 Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true

      - name: 安装系统依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.1-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf

      - name: 安装交叉编译工具 (ARM)
        if: matrix.target != 'x86_64-unknown-linux-gnu'
        run: |
          if [ "${{ matrix.target }}" = "aarch64-unknown-linux-gnu" ]; then
            sudo apt-get install -y gcc-aarch64-linux-gnu
          elif [ "${{ matrix.target }}" = "armv7-unknown-linux-gnueabihf" ]; then
            sudo apt-get install -y gcc-arm-linux-gnueabihf
          fi

      - name: 安装依赖
        run: pnpm install

      - name: 运行 Prebuild
        run: node scripts/prebuild.mjs ${{ matrix.target }}

      - name: 构建应用
        run: pnpm tauri build --target ${{ matrix.target }}
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.target }}
          path: |
            src-tauri/target/${{ matrix.target }}/release/bundle/
          if-no-files-found: error

  # 创建发布
  create-release:
    needs: [build-windows, build-macos, build-linux]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
      - name: 下载所有构建产物
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: 创建 Release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}






